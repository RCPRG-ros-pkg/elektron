<launch>
	<arg name="base" value="elektron"/> <!-- only elektron -->
	<arg name="laser"    value="$(optenv ELEKTRON_LASER Laser)"/> <!--  Laser, NoLaser   -->
	<arg name="tower" value="$(optenv ELEKTRON_TOWER True)"/>  <!--  Tower, NoTower  --> 
	<arg name="tower_sensor" value="$(optenv ELEKTRON_TOWER_SENSOR kinect)"/>  <!-- kinect, rgb  --> 

  	<node name="control_subsystem_move_server" pkg="elektron_base" type="move_server.py" /> 
 	<node name="virtual_effector_tower_controller" pkg="elektron_base" type="tower_controller.py" />
  	<node name="virtual_effector_base_controller" pkg="elektron_base" type="base_controller.py"  args="1"/>
  	<node name="control_subsystem_estimator" pkg="elektron_base" type="estimator_server.py" />
  	<node name="real_effector_tower" pkg="elektron_tower" type="elektron_tower_real_effector" />


	<include file="$(find elektron_bringup)/launch/includes/elektron_base.launch"/>

	<arg name="camera" value="head_camera_rgb" />

	<include file="$(find netusb_camera_driver)/launch/generic.launch">
		<!-- Namespace to publish in -->
	 	 <arg name="camera" value="head_camera_rgb" />

	 	<!-- You can select the camera to open by its GUID or IP address. In some cases
		if the camera is connected through a switch (not visible to ListCameras),
		it may only be possible to open a camera by its fixed IP address.
	       
		For help configuring your camera or determining its IP address, see
		http://www.ros.org/wiki/prosilica_camera/Tutorials.
	       
		By default, when neither argument is set, open the fisourcerst camera found.
		If both are set, open by IP address and verify the GUID matches.
		-->
		<arg name="camera_id" default="0" />

		<!-- Trigger mode: 'streaming', 'software' or 'hardware' -->
		<arg name="trigger_mode" default="streaming" />

		<!-- tf frame id associated with this camera -->
		<arg name="frame_id" default="$(arg camera)_optical_frame" />
	</include>
</launch>
