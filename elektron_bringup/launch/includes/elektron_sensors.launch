<launch>
	<!-- Sick LMS100 laser rangefinder

	<node name="tf_laser_link" pkg="tf" type="static_transform_publisher" args="0.11 0 0.22 0 0 0 base_link base_laser_link 20" /> -->

	<node name="base_laser" pkg="lms1xx" type="LMS1xx_node" respawn="true" output="screen">
<!--		<remap from="scan" to="scan_raw"/>-->
		<param name="host" type="string" value="192.168.1.2" />
		<param name="frame_id" type="string" value="/base_laser_link" />
	</node>

	<!-- KINECT camera nodes -->
	<arg name="tower" default="1" />

	<!-- Tower TOP -->
	<include file="$(find openni_launch)/launch/openni.launch" if="$(arg tower)" >
	<arg name="camera" value="tower_top_kinect" />
	<arg name="device_id" value="A00365A12014111A" />

	<!--<arg name="depth_frame_id " value="kinect_camera_depth_optical_frame_tower_top" />
	<arg name="rgb_frame_id" value="kinect_camera_rgb_optical_frame_tower_top" />-->
	</include>

	<!-- Tower bottom 
	<include file="$(find openni_launch)/launch/openni.launch" if="$(arg tower)" >
	<arg name="camera" value="bottom_kinect" />
	<arg name="device_id" value="B00366710452116B" />
	<arg name="depth_frame_id " value="kinect_camera_depth_optical_frame_tower_bottom" />
	<arg name="rgb_frame_id" value="kinect_camera_rgb_optical_frame_tower_top_bottom" />
	</include> -->

	<!-- NETUSB camera node -->
	<arg name="camera" value="head_camera_rgb" />
	<arg name="netusb" default="1" />
	<include file="$(find netusb_camera_driver)/launch/generic.launch" if="$(arg netusb)">
		<!-- Namespace to publish in -->
	 	 <arg name="camera" value="head_camera_rgb" />

	 	<!-- You can select the camera to open by its GUID or IP address. In some cases
		if the camera is connected through a switch (not visible to ListCameras),
		it may only be possible to open a camera by its fixed IP address.
	       
		For help configuring your camera or determining its IP address, see
		http://www.ros.org/wiki/prosilica_camera/Tutorials.
	       
		By default, when neither argument is set, open the fisourcerst camera found.
		If both are set, open by IP address and verify the GUID matches.
		-->
		<arg name="camera_id" default="0" />

		<!-- Trigger mode: 'streaming', 'software' or 'hardware' -->
		<arg name="trigger_mode" default="streaming" />

		<!-- tf frame id associated with this camera -->
		<arg name="frame_id" default="rgb_head_1" />
	</include>


	<!-- Gyroscope module -->

<!--	<node name="gyro" pkg="elektron_sensors" type="gyroscope.py"> 		-->
<!--		<param name="device" type="string" value="/dev/ttyUSB2" />		-->
<!--		<param name="rot_scale" type="double" value="0.92928" />		-->
<!--	</node>			-->

</launch>
